r"""
(c) 2023 by rice0208, licensed under MIT.

# 正方形操场

## 题目描述

FDFZ特别喜欢正方形。以前他有两个长方形操场，每个操场都由左下角坐标$(a, b)$和右上角坐标$(x,y)$描述，并且两侧与$X$轴和$Y$轴平行。现在FDFZ想用一个最小尺寸的正方形操场来代替已有的两个操场，并且要覆盖已有的两个操场的区域。      

请帮助FDFZ计算出他的正方形操场所需的最小面积。

## 输入格式

第一行有四个整数，$a$，$b$，$x$，$y$，四个整数均在0~10之间，表示原来的第一个长方形操场，操场的左下角位于点$(a,b)$，右上角位于点$(x,y)$，其中$x>a$，$y>b$。     

第二行也有四个整数，表示原来的第二个长方形操场，表示方法与第一个相同。    

测试数据保证两个长方形操场没有重叠部分

$\color{Red}\textbf{Python语言的横向输入方法}$: 本题是横向的输入方式，请用下面的方法：      
s=input().split()        
a1=int(s[0])    
b1=int(s[1])    
x1=int(s[2])    
y1=int(s[3])      
s=input().split()        
a2=int(s[0])    
b2=int(s[1])    
x2=int(s[2])    
y2=int(s[3])    

说明：input进入电脑的是一个字符串，用split函数切割为一个列表s，然后从列表里取出各个数字，列表元素的编号是从0开始的。

## 输出格式

一个整数，表示新的正方形操场的面积的最小值。

## 样例 #1

### 样例输入 #1

```
6  6  8  8
1  8  4  9
```

### 样例输出 #1

```
49
```

## 样例 #2

### 样例输入 #2

```
2  1  9  7
5  8  6  9
```

### 样例输出 #2

```
64
```

## 提示

对于样例一，原来的第一个长方形操场的左下角位置在$(6,6)$，右上角位置在$(8,8)$；原来的第二个长方形操场的左下角位置在$(1,8)$，右上角位置在$(4,9)$。新的最小的正方形操场的边长是7，左下角坐标是$(1,6)$，右上角坐标是$(8,13)$。      

新操场的有效位置可能不止一种，但面积的最小值是一定的。
"""

s = input().split()
a = int(s[0])
b = int(s[1])
x = int(s[2])
y = int(s[3])

s = input().split()
a_ = int(s[0])
if a_ < a:
    a = a_
b_ = int(s[1])
if b_ < b:
    b = b_
x_ = int(s[2])
if x < x_:
    x = x_
y_ = int(s[3])
if y < y_:
    y = y_

x_sq = (a - x) ** 2
y_sq = (b - y) ** 2

if x_sq < y_sq:
    print(y_sq)
else:
    print(x_sq)
